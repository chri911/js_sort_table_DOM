{"version":3,"sources":["scripts/main.js"],"names":["thead","document","querySelector","tbody","rows","convert","string","Number","replace","sortColumn","e","index","sorted","target","cellIndex","isNaN","cells","innerText","sort","currentRow","nextRow","currentValue","nextValue","localeCompare","append","addEventListener"],"mappings":";AAAA,aAkCA,SAAA,EAAA,GAAA,OAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,IAAA,SAAA,IAAA,MAAA,IAAA,UAAA,wIAAA,SAAA,EAAA,EAAA,GAAA,GAAA,EAAA,CAAA,GAAA,iBAAA,EAAA,OAAA,EAAA,EAAA,GAAA,IAAA,EAAA,OAAA,UAAA,SAAA,KAAA,GAAA,MAAA,GAAA,GAAA,MAAA,WAAA,GAAA,EAAA,cAAA,EAAA,EAAA,YAAA,MAAA,QAAA,GAAA,QAAA,EAAA,MAAA,KAAA,GAAA,cAAA,GAAA,2CAAA,KAAA,GAAA,EAAA,EAAA,QAAA,GAAA,SAAA,EAAA,GAAA,GAAA,oBAAA,QAAA,OAAA,YAAA,OAAA,GAAA,OAAA,MAAA,KAAA,GAAA,SAAA,EAAA,GAAA,GAAA,MAAA,QAAA,GAAA,OAAA,EAAA,GAAA,SAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,UAAA,EAAA,EAAA,QAAA,IAAA,IAAA,EAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,IAAA,EAAA,GAAA,EAAA,GAAA,OAAA,EAhCA,IAAMA,EAAQC,SAASC,cAAc,SAC/BC,EAAQF,SAASC,cAAc,SAC/BE,EAAWD,EAAAA,EAAMC,MAEjBC,EAAU,SAACC,GACRC,OAAAA,OAAOD,EAAOE,QAAQ,QAAS,MAGlCC,EAAa,SAACC,GACZC,IACFC,EADED,EAAQD,EAAEG,OAAOC,UAIrBF,EADEL,OAAOQ,MAAMV,EAAQD,EAAK,GAAGY,MAAML,GAAOM,YACnCb,EAAKc,KACZ,SAACC,EAAYC,GACLC,IAAAA,EAAeF,EAAWH,MAAML,GAAOM,UACvCK,EAAYF,EAAQJ,MAAML,GAAOM,UAEhCI,OAAAA,EAAaE,cAAcD,KAG7BlB,EAAKc,KAAK,SAACC,EAAYC,GACxBC,IAAAA,EAAeF,EAAWH,MAAML,GAAOM,UACvCK,EAAYF,EAAQJ,MAAML,GAAOM,UAEhCZ,OAAAA,EAAQgB,GAAgBhB,EAAQiB,KAI3CnB,EAAMqB,OAANrB,MAAAA,EAAgBS,EAAAA,KAGlBZ,EAAMyB,iBAAiB,QAAShB","file":"main.ca581d31.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nconst thead = document.querySelector('thead');\nconst tbody = document.querySelector('tbody');\nconst rows = [...tbody.rows];\n\nconst convert = (string) => {\n  return Number(string.replace(/[$,]/g, ''));\n};\n\nconst sortColumn = (e) => {\n  const index = e.target.cellIndex;\n  let sorted;\n\n  if (Number.isNaN(convert(rows[0].cells[index].innerText))) {\n    sorted = rows.sort(\n      (currentRow, nextRow) => {\n        const currentValue = currentRow.cells[index].innerText;\n        const nextValue = nextRow.cells[index].innerText;\n\n        return currentValue.localeCompare(nextValue);\n      });\n  } else {\n    sorted = rows.sort((currentRow, nextRow) => {\n      const currentValue = currentRow.cells[index].innerText;\n      const nextValue = nextRow.cells[index].innerText;\n\n      return convert(currentValue) - convert(nextValue);\n    });\n  }\n\n  tbody.append(...sorted);\n};\n\nthead.addEventListener('click', sortColumn);\n"]}